(function(define) { define(function(require, ex$, module) {
ex$.$CCMM$={"$mod-nat":["js"],"$mod-version":"1.0.1","$mod-deps":["ceylon.language\/1.3.3",{exp:1,path:"ceylon.html\/1.3.3"},{exp:1,path:"ceylon.interop.browser\/1.3.3"},"npm:mithril\/1.1.6"],"herd.thrillon.internal":{DomAttributeValueProvider:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeValueProvider"}],ps:[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Node"}]},pa:1025,def:1,mt:"prm",nm:"dom"}],mt:"c",$at:{dom:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Node"}]},pa:1025,mt:"a",nm:"dom"},attributeValue:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:3,mt:"g",nm:"attributeValue"}},nm:"DomAttributeValueProvider"},BinderAttributeValueProvider:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeValueProvider"}],ps:[{$t:{pk:"herd.thrillon",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{nm:"T"}},nm:"WatchedValue"},mt:"prm",nm:"watchedValue"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"boundAttributeName",$hdn:1},{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"prm",$pt:"f",nm:"updateEvent",$hdn:1},{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"HTMLElement"},mt:"prm",nm:"dom"}]],mt:"prm",$pt:"f",nm:"extractFromDom",$hdn:1}],mt:"c",$at:{val:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,mt:"a",nm:"val"},boundAttributeName$hg30zd:{$t:{md:"$",pk:"$",nm:"String"},mt:"a",nm:"boundAttributeName"},watchedValue$8mfl25:{$t:{pk:"herd.thrillon",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{nm:"T"}},nm:"WatchedValue"},mt:"a",nm:"watchedValue"},attributeValue:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:3,mt:"g",nm:"attributeValue"},update:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,mt:"a",nm:"update"}},$m:{extractFromDom$iabvdj:{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"HTMLElement"},mt:"prm",nm:"dom"}]],mt:"m",nm:"extractFromDom"},updateEvent$g8cu5b:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"updateEvent"}},tp:[{of:[{md:"$",pk:"$",nm:"Boolean"},{md:"$",pk:"$",nm:"Integer"},{md:"$",pk:"$",nm:"Float"},{md:"$",pk:"$",nm:"String"}],nm:"T"},{sts:[{md:"$",pk:"$",nm:"Null"}],nm:"Exists"}],nm:"BinderAttributeValueProvider"},setDom:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,ps:[[{$t:{pk:".",nm:"DomAttributeValueProvider"},mt:"prm",nm:"theDomProvider"}],[{$t:{pk:"herd.thrillon",nm:"VNode"},mt:"prm",nm:"vn"}]],$ff:1,mt:"m",nm:"setDom"},MultiAttributeValueProvider:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeValueProvider"}],ps:[{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{pk:"$",nm:"Nothing"},"Iterable.Element":{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"}},nm:"Iterable"},pa:1,mt:"prm",nm:"providers"}],mt:"c",$at:{attributeValue:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:3,mt:"g",nm:"attributeValue"},providers:{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{pk:"$",nm:"Nothing"},"Iterable.Element":{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"}},nm:"Iterable"},pa:1,mt:"a",nm:"providers"}},nm:"MultiAttributeValueProvider"},domRetrieverAttributeName:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"domRetrieverAttributeName"},VoidAttributeValueProvider:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeValueProvider"}],ps:[{$t:{md:"$",pk:"$",ta:{"Callable.Arguments":{$t:{pk:"$",nm:"Nothing"},count:1,pk:"$",nm:"Tuple"},"Callable.Return":{md:"$",pk:"$",nm:"Anything"}},nm:"Callable"},pa:1,mt:"prm",nm:"code"}],mt:"c",$at:{code:{$t:{md:"$",pk:"$",ta:{"Callable.Arguments":{$t:{pk:"$",nm:"Nothing"},count:1,pk:"$",nm:"Tuple"},"Callable.Return":{md:"$",pk:"$",nm:"Anything"}},nm:"Callable"},pa:1,mt:"a",nm:"code"},attributeValue:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:3,mt:"g",nm:"attributeValue"}},nm:"VoidAttributeValueProvider"},domProvider:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"DomAttributeValueProvider"}]},pa:1,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.html",pk:"ceylon.html",nm:"Node"}]},mt:"prm",nm:"node"}]],mt:"m",nm:"domProvider"}},"$mod-bin":"10.0","herd.thrillon.jsutils":{JsType:{pa:1,$alias:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Integer"},{md:"$",pk:"$",nm:"Float"},{md:"$",pk:"$",nm:"Boolean"},{pk:".",nm:"JsObject"},{pk:".",nm:"JsArray"}]},mt:"als",nm:"JsType"},JsObject:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{md:"$",pk:"$",ta:{"Correspondence.Item":{pk:".",nm:"JsType"},"Correspondence.Key":{md:"$",pk:"$",nm:"String"}},nm:"Correspondence"},{md:"$",pk:"$",ta:{"Collection.Element":{md:"$",pk:"$",ta:{"Entry.Item":{pk:".",nm:"JsType"},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Collection"}],ps:[{$t:{pk:".",nm:"JS"},mt:"prm",nm:"js",$hdn:1}],mt:"c",$at:{js$ce6nta:{$t:{pk:".",nm:"JS"},mt:"a",nm:"js"},string:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"g",nm:"string"}},$m:{iterator:{$t:{md:"$",pk:"$",ta:{"Iterator.Element":{md:"$",pk:"$",ta:{"Entry.Item":{pk:".",nm:"JsType"},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Iterator"},pa:3,mt:"m",nm:"iterator"},get:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"JsType"}]},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"key"}]],mt:"m",nm:"get"},clone:{$t:{md:"$",pk:"$",ta:{"Collection.Element":{md:"$",pk:"$",ta:{"Entry.Item":{pk:".",nm:"JsType"},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Collection"},pa:3,mt:"m",nm:"clone"},defines:{$t:{md:"$",pk:"$",nm:"Boolean"},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"key"}]],mt:"m",nm:"defines"}},nm:"JsObject"},JsArray:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{md:"$",pk:"$",ta:{"List.Element":{pk:".",nm:"JsType"}},nm:"List"}],ps:[{$t:{pk:".",nm:"JS"},mt:"prm",nm:"js",$hdn:1}],mt:"c",$at:{paths:{$t:{md:"$",pk:"$",ta:{"List.Element":{pk:".",nm:"JsPath"}},nm:"List"},pa:1,mt:"g",nm:"paths"},js$rv5js6:{$t:{pk:".",nm:"JS"},mt:"a",nm:"js"},lastIndex:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Integer"}]},pa:3,mt:"g",nm:"lastIndex"},hash:{$t:{md:"$",pk:"$",nm:"Integer"},pa:3,mt:"g",nm:"hash"}},$m:{getFromFirst:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"JsType"}]},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"Integer"},mt:"prm",nm:"index"}]],mt:"m",nm:"getFromFirst"},equals:{$t:{md:"$",pk:"$",nm:"Boolean"},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"Object"},mt:"prm",nm:"that"}]],mt:"m",nm:"equals"}},nm:"JsArray"},"$pkg-pa":1,voidJs:{$t:{pk:".",nm:"JS"},pa:1,mt:"g",nm:"voidJs"},testJsObject:{$t:{md:"$",pk:"$",nm:"Anything"},$ff:1,mt:"m",nm:"testJsObject"},JS:{pa:1,mt:"i",dyn:1,nm:"JS"},voidType:{$t:{pk:".",nm:"JsType"},mt:"g",nm:"voidType"},voidPath:{super:{pk:".",nm:"JsPath"},mt:"o",$at:{str:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:3,mt:"g",nm:"str"},bool:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Boolean"}]},pa:3,mt:"g",nm:"bool"},array:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"JsArray"}]},pa:3,mt:"g",nm:"array"},obj:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"JsObject"}]},pa:3,mt:"g",nm:"obj"},float:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Float"}]},pa:3,mt:"g",nm:"float"},int:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Integer"}]},pa:3,mt:"g",nm:"int"}},$m:{get:{$t:{pk:".",nm:"JsPath"},pa:3,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Integer"}]},mt:"prm",nm:"key"}]],mt:"m",nm:"get"},defines:{$t:{md:"$",pk:"$",nm:"Boolean"},pa:3,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Integer"}]},mt:"prm",nm:"key"}]],mt:"m",nm:"defines"}},nm:"voidPath"},jsType:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"JsType"}]},pa:1,ps:[[{$t:{nm:"$U"},mt:"prm",nm:"js"}]],mt:"m",nm:"jsType"},"$pkg-anns":[{doc:["Utilities that simplify the work with\nraw Javascript variables (objects or arrays)"]}],JsPath:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{md:"$",pk:"$",ta:{"Correspondence.Item":{pk:".",nm:"JsPath"},"Correspondence.Key":{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Integer"}]}},nm:"Correspondence"},{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{pk:".",nm:"JsPath"}},nm:"Iterable"}],ps:[{$t:{pk:".",nm:"JsType"},mt:"prm",nm:"jsType"}],mt:"c",$at:{str:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:9,mt:"g",nm:"str"},entries:{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{md:"$",pk:"$",ta:{"Entry.Item":{pk:".",nm:"JsPath"},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Iterable"},pa:1,mt:"g",nm:"entries"},bool:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Boolean"}]},pa:9,mt:"g",nm:"bool"},array:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"JsArray"}]},pa:9,mt:"g",nm:"array"},obj:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"JsObject"}]},pa:9,mt:"g",nm:"obj"},elements:{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{pk:".",nm:"JsPath"}},nm:"Iterable"},pa:1,mt:"g",nm:"elements"},jsType$bmoodq:{$t:{pk:".",nm:"JsType"},mt:"a",nm:"jsType"},float:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Float"}]},pa:9,mt:"g",nm:"float"},int:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Integer"}]},pa:9,mt:"g",nm:"int"}},$m:{iterator:{$t:{md:"$",pk:"$",ta:{"Iterator.Element":{pk:".",nm:"JsPath"}},nm:"Iterator"},pa:3,mt:"m",nm:"iterator"},get:{$t:{pk:".",nm:"JsPath"},pa:11,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Integer"}]},mt:"prm",nm:"key"}]],mt:"m",nm:"get"},defines:{$t:{md:"$",pk:"$",nm:"Boolean"},pa:11,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Integer"}]},mt:"prm",nm:"key"}]],mt:"m",nm:"defines"}},nm:"JsPath",$cn:{$def:{pa:1,ps:[{$t:{pk:".",nm:"JsType"},mt:"prm",nm:"jsType"}]}}}},"$mod-anns":[{doc:["\n\nThe `herd.thrillon` module contains a Mithril renderer for the\nstandard HTML module of the Ceylon SDK: [`ceylon.html`](https:\/\/modules.ceylon-lang.org\/repo\/1\/ceylon\/html\/1.3.3\/module-doc\/api\/index.html).\n\nThis combines the *__statically-typed__*, *__declarative__* and *__functional__* approach of\n`ceylon.html` with the *__simplicity__*, *__power__*, and *__performance__* of\n[Mithril.js](https:\/\/mithril.js.org)\n\nInstead of having a `ceylon.html` node rendered directly to a string and assigned to the content\nof a dom node, it allows rendering a `ceylon.html` node as a Mithril component that can be directly\nmounted at a given location in the HTML page DOM tree.\n\nThis means, in particular, that you can attach Ceylon functions as event handlers\ndirectly while defining your HTML.\n\n------------------------------------------------------------------\n\n#### CONTENT\n\n1. [What does it look like?](#what-does-it-look-like)\n1. [Basics](#basics)\n1. [Event handlers](#events)\n1. [Watched values](#watched-values)\n1. [Bi-directional bound values](#bi-directional-bound-values)\n1. [Routing](#routing)\n1. [Javascript utilies](#javascript-utilities)\n1. [Packaging](#packaging)\n1. [Dom access](#dom-access)\n1. [External component reuse](#external-component-reuse)\n1. [Lifecycle handlers](#lifecycle-handlers)\n\n------------------------------------------------------------------\n\n#### <a name=\"what-does-it-look-like\"><\/a> WHAT DOES IT LOOK LIKE?\n\nA quick preview shows code example, which mounts a Ceylon HTML Mithril template to\nthe DOM document root:\n\n```\n     shared void run() {\n         assert (exists root = document.body);\n         mount {\n             parent = root;\n             \n             object component satisfies Template {\n                 variable value count = 0;\n                 build() =>\n                     Main {\n                         Div {\n                             H1 {\n                                 \"Thrillon: Mix Mithril and Ceylon Html DSL !\"\n                             },\n                             Button {\n                                 attributes = [ \n                                     event.click((evt) { \n                                         count ++; \n                                     })\n                                 ];\n                                 \n                                 \"``count`` clicks\"\n                             }                    \n                         }\n                     };\n             }\n         };\n     }\n   ```\n\nCalling this `run()` method from the main HTML page is all you have to do\nto have the button react to click events and increment the \ndisplayed click counter.\n\n------------------------------------------------------------------\n\n#### <a name=\"basics\"><\/a> BASICS\n\nThe module defines bindings for some of the main Mithril API calls and structures:\n- the [[Component]] interface,\n- the [[VNode]] interface,\n- the [[vnode]] hyperscript function,\n- the [[mount]] function,\n\nand a new type of Mithril component based on the `ceylon.html` module:\n\n- the [[Template]] interface.\n\nTo create a new Mithril component, simply implement the [[Template.build|Template.build]] method\nto return a [[ceylon.html|module ceylon.html]] [[Node]] element.\n\nThis `ceylon.html`-based Mithril component can then be attached to any Dom element\nin the DOM tree with the [[mount|mount]] function.\n\n\n------------------------------------------------------------------\n\n#### <a name=\"event-handlers\"><\/a> EVENT HANDLERS\n\nThe [[event]] object allows adding Ceylon functions as event handlers\nin the [[attributes|ceylon.html::Node.attributes]] of a\n[[ceylon.html|module ceylon.html]] [[node|ceylon.html::Node]].\n\n```\n     Button {\n         attributes = [ \n             event.click((evt) { \n                 \/\/ Ceylon code\n                 \/\/ 'evt' is a ceylon.interop.browser.dom::Event\n             })\n         ];\n         \n         \"Button Text\"\n     }                    \n\n```   \n\nMore information is given on the [[documentation|event]].\n\n------------------------------------------------------------------\n\n#### <a name=\"watched-values\"><\/a> WATCHED VALUES\n\nThe [[WatchedValue]] class provides a way to automatically\ntrigger an incremental redraw of the HTML DOM tree each time\na value is changed.\n\nMore information is given on the [[documentation|WatchedValue]].\n\n------------------------------------------------------------------\n\n#### <a name=\"bi-directional-bound-values\"><\/a> BI-DIRECTIONAL BOUND VALUES\n\nA [[BoundValue]] provides a way to associate a value\nwith an Html node, and bidirectionally bind it to a propety\nof the html node.\n\nMore information is given on the [[documentation|BoundValue]].\n\n------------------------------------------------------------------\n\n#### <a name=\"routing\"><\/a> ROUTING\n\n[Mithril routing](https:\/\/mithril.js.org\/#routing) is provided by\nthe [[router]] object which satisfies the [[Router]] interface.\n\n------------------------------------------------------------------\n\n#### <a name=\"javascript-utilities\"><\/a> JAVASCRIPT UTILITIES\n\nIn a number of use-cases, we have to manage raw javascript objects:\nfor parameters of the [[Template.build]] method, or the route parameters\nof the [[Router.redirect]] method for example.\n\nIn order to make the use of these row Javascript objects in a\n*pseudo-typesafe* way, such values are declared as the [[JS]] type.\n\nThen a [[JsObject]] can be instanciated with the [[JS]] value, in order\nto retrieve properties by using native Ceylon correspondence syntax:\n\n```\n    value jsObject = JsObject(js);\n    JsType? prop = jsObject[\"propName\"];\n```\n\nThe same can be done with the [[JsArray]].\n\nAnd [[JsType]] is either a simple value [[String]], [[Boolean]], etc...\nor a [[JsObject]] or a [[JsArray]]\n\nAny arbitrary `dynamic` Javascript value can be converted to a\n[[JsType]] by the [[jsType]] function.\n\nIn the case of complex, deep, Javascript objects, the [[JsPath]]\nclass allows pointing directly to an expected value in the Javascript\nobject tree structure like this:\n\n```\n    value jsPath = JsPath(complexJavascriptObject);\n\n    \/\/ get a[0].s\n    String? sInFirstA = path.get(\"a\").get(0).get(\"s\").str;\n\n    \/\/ get a.*.s\n    {String*} sInAllAs = path.get(\"a\")*.get(\"s\")*.str;\n```\n\n------------------------------------------------------------------\n\n#### <a name=\"packaging\"><\/a> PACKAGING\n\nA Thrillon application is packaged by using [requireJS](http:\/\/requirejs.org\/)\n\nMinimal `RequireJs` code to bootstrap a *thrillon_application* module\nwould be like that:\n\n```javascript\n\n require.config({\n     baseUrl : 'modules\/',\n     paths: {\n         \/\/ Define where the real Javascript file is available for the Mithril\/1.1.6 NPM\n         \/\/ module, related to the requireJS `baseUrl`\n         \/\/ When running from your development environment, the NPM module already has\n         \/\/ been downloaded into `..\/node_modules` when compiling the Ceylon application.\n\n         'mithril\/1.1.6\/mithril-1.1.6': '\/..\/node_modules\/mithril\/mithril.min'\n     }\n });\n\n require([ 'thrillon_application\/1.0.0\/thrillon_application-1.0.0'], function(example) {\n     example.run();\n });\n\n```\n\n------------------------------------------------------------------\n\n#### <a name=\"dom-access\"><\/a> DOM ACCESS\n\nIn some use-cases, it might be useful, from event-handlers, to\nhave access to the underlying [[DOM node|DomNode]] corresponding\nto a given Html [[Node]].\n\n###### Example\n\n```\n button = Button {\n     attributes = [\n         attachDom(),\n         event.click((evt) {\n             value domButton = dom(button);\n             if (is HtmlDomElement domButton) {\n                 value style = domButton.getAttribute(\"style\");\n                 if(exists style, style == \"background-color: yellow;\") {\n                     domButton.setAttribute(\"style\", \"background-color: blue;\");\n                 } else {\n                     domButton.setAttribute(\"style\", \"background-color: yellow;\");\n                 }\n             }\n         })\n     ];\n\n     \"Change color\"\n };\n return button;\n\n```\n\nThe [[attachDom]] function is called as part of the Html [[Node.attributes]].\nThen the DOM node associated to the `button` Html [[Node]] through\nthe [[dom]] function.\n\n------------------------------------------------------------------\n\n#### <a name=\"external-component-reuse\"><\/a> EXTERNAL COMPONENT REUSE\n\nThrillon allows reusing external\n[Mithril components](https:\/\/mithril.js.org\/components.html)\nby simply inserting a [[WrappedComponent]] inside the `ceylon.html`\ntree-like structure.\n\n------------------------------------------------------------------\n\n#### <a name=\"lifecycle-handlers\"><\/a> LIFECYCLE HANDLERS\n\nThe [[lifecycle]] top-level object provides wrapper methods for each\n[Mithril lifecycle event](https:\/\/mithril.js.org\/components.html#lifecycle-methods).\n\nEvery wrapper method produces an [[AttributeEntry]] from the corresponding\nevent handler implemented as a Ceylon function type.\n\n###### How to use it\n\nIt is used when creating the `ceylon.html` tree that will be rendered\nby a [[Template]]. Event Handlers can thus be added in the\n[[Node.attributes]] parameter of the Html Node.\n\n###### Example\n\n```\n Pre {\n     Code { clazz = \"ceylon\";\n         attributes = [\n             lifecycle.create((vnode) {\n                 dynamic {\n                     hljs.highlightBlock(vnode.dom);\n                 }\n             })\n         ];\n         sourceCode\n     }\n }\n```\n\nIn this example, the [highlight.js](https:\/\/highlightjs.org\/) highlighting\nis applied to the content of the [[Code]] Html node, each time the\ncorresponding Dom node is created.\n\n------------------------------------------------------------------\n\n"]},{native:["js"]}],"herd.thrillon":{RouteResolver:{pa:1,mt:"i",dyn:1,$m:{onmatch:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"Component"}]},pa:5,ps:[[{$t:{pk:"herd.thrillon.jsutils",nm:"JS"},mt:"prm",nm:"args"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"requestedPath"}]],mt:"m",dyn:1,nm:"onmatch"},render:{$t:{comp:"u",l:[{md:"$",pk:"$",ta:{"Array.Element":{pk:".",nm:"VNode"}},nm:"Array"},{pk:".",nm:"VNode"}]},pa:5,ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"m",dyn:1,nm:"render"}},an:[{doc:["\nWrapper around the Mithril [RouteResolver](https:\/\/mithril.js.org\/route.html#routeresolver)\n"]}],nm:"RouteResolver"},dom:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Node"}]},pa:1,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.html",pk:"ceylon.html",nm:"Node"}]},mt:"prm",nm:"node"}]],mt:"m",an:[{doc:["\nFunction that retrieves the current dom node from a Html [[Node]],\nassuming that it was previously requested with the [[attachDom]] function\n"]}],nm:"dom"},vnode:{$t:{pk:".",nm:"VNode"},pa:1,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{pk:".",nm:"Component"}]},mt:"prm",nm:"element"},{$t:{nm:"$U"},mt:"prm",nm:"attributes"},{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{comp:"u",l:[{pk:".",nm:"VNode"},{md:"$",pk:"$",nm:"String"}]}},nm:"Iterable"},mt:"prm",nm:"children"}]],mt:"m",an:[{doc:["Creates a virtual node (VNode).\n\nThis a wrapper on the main hyperscript function of the Mithril API:\n[m()](https:\/\/mithril.js.org\/hyperscript.html)"]}],nm:"vnode"},SelectValue:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{pk:".",ta:{"BoundValue.Exists":{nm:"Exists"},"BoundValue.T":{md:"$",pk:"$",nm:"String"}},nm:"BoundValue"}],ps:[{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{md:"$",pk:"$",nm:"String"}},nm:"WatchedValue"},pa:3,mt:"prm",nm:"watchedValue"}],mt:"c",$at:{watchedValue:{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{md:"$",pk:"$",nm:"String"}},nm:"WatchedValue"},pa:3,mt:"a",nm:"watchedValue"},binder:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:3,mt:"g",nm:"binder"}},tp:[{sts:[{md:"$",pk:"$",nm:"Null"}],nm:"Exists"}],an:[{doc:["\nA [[BoundValue]] that can be used with a [[Select]] Html node.\n\n### Example\n\n```\n   object satisfies Template {\n     value select = SelectValue(ExistingWatchedValue<String>(\"option1\"));\n\n     build(JS attrs) =>\n       Main {\n         Div {\n           Select {\n             attributes = [ select.binder ];\n\n             Option { val = \"option1\"; \"Option 1\" },\n             Option { val = \"option2\"; \"Option 2\" },\n             Option { val = \"option3\"; \"Option 3\" }\n           },\n           Button {\n             attributes = [\n                 event.click((evt) {\n                     \/\/ Displays the chosen option\n                     window.alert(\"Current choice = ``select.val``\");\n                 })\n             ];\n             \"Display\"\n           }\n         }\n       }\n   }\n   ```\n"]}],nm:"SelectValue"},buildBinder:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{nm:"T"}},nm:"WatchedValue"},mt:"prm",nm:"watchedValue"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"boundAttributeName"},{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"prm",$pt:"f",nm:"updateEvent"},{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"HTMLElement"},mt:"prm",nm:"dom"}]],mt:"prm",$pt:"f",nm:"extractFromDom"}]],mt:"m",tp:[{of:[{md:"$",pk:"$",nm:"Boolean"},{md:"$",pk:"$",nm:"Integer"},{md:"$",pk:"$",nm:"Float"},{md:"$",pk:"$",nm:"String"}],nm:"T"},{sts:[{md:"$",pk:"$",nm:"Null"}],nm:"Exists"}],an:[{doc:["Utility function to help construct the [[binder|BoundValue.binder]]\nwhen building new types of [[BoundValue]]s"]}],nm:"buildBinder"},attachDom:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,mt:"m",an:[{doc:["\nFunction that should be called as part of the Html [[Node]] attributes\nto be able to retrieve the current dom node from a Html [[Node]]\nthrough the [[dom]] function.\n\n#### Example\n\n```\n button = Button {\n     attributes = [\n         attachDom(),\n         event.click((evt) {\n             value domButton = dom(button);\n             if (is HtmlDomElement domButton) {\n                 value style = domButton.getAttribute(\"style\");\n                 if(exists style, style == \"background-color: yellow;\") {\n                     domButton.setAttribute(\"style\", \"background-color: blue;\");\n                 } else {\n                     domButton.setAttribute(\"style\", \"background-color: yellow;\");\n                 }\n             }\n         })\n     ];\n\n     \"Change color\"\n };\n return button;\n\n```\n"]}],nm:"attachDom"},Template:{pa:1,sts:[{pk:".",nm:"Component"}],mt:"i",$m:{view:{$t:{pk:".",nm:"VNode"},pa:3,ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"node"}]],mt:"m",nm:"view"},build:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"Node"},pa:5,ps:[[{$t:{pk:".",nm:"Args"},mt:"prm",an:[{doc:["Attributes passed to the component by Mithril during redraw.\nThis corresponds to the `vnode.args` value received by the\n[[view|view]] method. For more details see\n[the Mithril documentation](https:\/\/mithril.js.org\/components.html#passing-data-to-components)\n\nHowever, to facilitate the use of these Javascript raw data\nin Ceylon, they are provided as a [[JS]] object.\nThis allows using the [[JsObject]] class to easily access\nits contents in a typesafe and secure way.\n"]}],nm:"attrs"}]],mt:"m",an:[{doc:["\nThis formal methd should be overriden in satisfying classes to\nprovide the Html [[Node]] tree that will be used\nby the [[view|view]] method to build the expected\n[[VNode]] on Mithril redraws.\n"]}],nm:"build"},visitRaw$7dw6jy:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"VNode"}]},ps:[[{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"Raw"},mt:"prm",nm:"node"}]],mt:"m",nm:"visitRaw"},visit$g7zous:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"VNode"}]},ps:[[{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"Node"},mt:"prm",nm:"node"}]],mt:"m",nm:"visit"},visitElement$s7utni:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"VNode"}]},ps:[[{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"Element"},mt:"prm",nm:"node"}]],mt:"m",nm:"visitElement"},visitChild$cbq6v2:{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{comp:"u",l:[{pk:".",nm:"VNode"},{md:"$",pk:"$",nm:"String"}]}},nm:"Iterable"},ps:[[{$t:{md:"ceylon.html",pk:"ceylon.html",ta:{"Content.Item":{md:"ceylon.html",pk:"ceylon.html",nm:"Node"}},nm:"Content"},mt:"prm",nm:"child"}]],mt:"m",nm:"visitChild"},fillDomRetriever$3a2sco:{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"},{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"Node"},mt:"prm",nm:"node"},{$t:{pk:"herd.thrillon.internal",nm:"DomAttributeValueProvider"},mt:"prm",nm:"provider"}]],$ff:1,mt:"m",nm:"fillDomRetriever"},resolveAttribute$nunac7:{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{md:"$",pk:"$",ta:{"Entry.Item":{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Boolean"},{md:"$",pk:"$",nm:"Integer"},{md:"$",pk:"$",nm:"Float"},{md:"$",pk:"$",ta:{"Callable.Arguments":{$t:{pk:"$",nm:"Nothing"},count:1,pk:"$",nm:"Tuple"},"Callable.Return":{md:"$",pk:"$",nm:"Anything"}},nm:"Callable"}]},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Iterable"},ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"}]},mt:"prm",nm:"attribute"}]],mt:"m",$m:{makeAttribute$uvnuup:{$t:{comp:"u",l:[{md:"$",pk:"$",ta:{"Entry.Item":{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Boolean"},{md:"$",pk:"$",nm:"Integer"},{md:"$",pk:"$",nm:"Float"},{md:"$",pk:"$",ta:{"Callable.Arguments":{$t:{pk:"$",nm:"Nothing"},count:1,pk:"$",nm:"Tuple"},"Callable.Return":{md:"$",pk:"$",nm:"Anything"}},nm:"Callable"}]},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"},{md:"$",pk:"$",nm:"Null"}]},ps:[[{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Boolean"},{md:"$",pk:"$",nm:"Integer"},{md:"$",pk:"$",nm:"Float"},{md:"$",pk:"$",ta:{"Callable.Arguments":{$t:{pk:"$",nm:"Nothing"},count:1,pk:"$",nm:"Tuple"},"Callable.Return":{md:"$",pk:"$",nm:"Anything"}},nm:"Callable"}]}]},mt:"prm",nm:"attributeValue"}]],mt:"m",nm:"makeAttribute"}},nm:"resolveAttribute"}},an:[{doc:["\nThis is the main interface that allows integrating [[ceylon.html|module ceylon.html]]\nand Mithril.\n\nThis interface allows defining a Mithril [[Component]] based on a Html tree returned as\na [[Node]] by the [[build|build]] formal method.\n\nTo create a new Mithril component, simply implement the [[Template.build|Template.build]] method\nto return a [[ceylon.html|module ceylon.html]] [[Node]] element.\n\nThis `ceylon.html`-based Mithril component can then be attached to any Dom element\nin the DOM tree with the [[mount|mount]] function.\n\n#### Example\n\n```\n     shared void run() {\n         assert (exists root = document.body);\n         mount {\n             parent = root;\n\n             object component satisfies Template {\n                 variable value count = 0;\n                 build() =>\n                     Main {\n                         Div {\n                             H1 {\n                                 \"Thrillon: Mix Mithril and Ceylon Html DSL !\"\n                             },\n                             Button {\n                                 attributes = [\n                                     event.click((evt) {\n                                         count ++;\n                                     })\n                                 ];\n\n                                 \"``count`` clicks\"\n                             }\n                         }\n                     };\n             }\n         };\n     }\n   ```\n\n\n"]}],nm:"Template"},WrappedComponent:{super:{md:"ceylon.html",pk:"ceylon.html",nm:"Element"},pa:1,sts:[{md:"ceylon.html",pk:"ceylon.html",nm:"FlowCategory"}],ps:[{$t:{pk:".",nm:"Component"},pa:1,mt:"prm",an:[{doc:["The wrapped Mithril component"]}],nm:"component"},{$t:{pk:"herd.thrillon.jsutils",nm:"JS"},pa:1,def:1,mt:"prm",$pt:"f",an:[{doc:["The Javascript attributes to be used with the component"]}],nm:"componentArgs"},{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"Attributes"},def:1,mt:"prm",an:[{doc:["The attributes associated with this HTML element."]}],nm:"attributes"},{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{md:"ceylon.html",pk:"ceylon.html",ta:{"Content.Item":{md:"ceylon.html",pk:"ceylon.html",nm:"Node"}},nm:"Content"}},nm:"Iterable"},def:1,mt:"prm",nm:"children"}],mt:"c",$at:{component:{$t:{pk:".",nm:"Component"},pa:1,mt:"a",an:[{doc:["The wrapped Mithril component"]}],nm:"component"},children$vxorn2:{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{md:"ceylon.html",pk:"ceylon.html",ta:{"Content.Item":{md:"ceylon.html",pk:"ceylon.html",nm:"Node"}},nm:"Content"}},nm:"Iterable"},mt:"a",nm:"children"},attributes$fjpoje:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"Attributes"},mt:"a",an:[{doc:["The attributes associated with this HTML element."]}],nm:"attributes"}},$m:{componentArgs:{$t:{pk:"herd.thrillon.jsutils",nm:"JS"},pa:1,mt:"m",an:[{doc:["The Javascript attributes to be used with the component"]}],nm:"componentArgs"}},an:[{doc:["\nThis class is a wrapper on a [Mithril component](https:\/\/mithril.js.org\/components.html)\nthat can be inserted inside a `ceylon.html` tree structure as any other HTML [[Node]]\n"]}],nm:"WrappedComponent"},lifecycle:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,mt:"o",$m:{init:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"init"},beforeUpdate:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Boolean"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"},{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"old"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"beforeUpdate"},beforeRemove:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"beforeRemove"},create:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"create"},update:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"update"},createAndUpdate:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"createAndUpdate"},remove:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"remove"}},an:[{doc:["This top-level object provides wrapper methods\nfor each Mithril lifecycle event.\n\nThis allows producing an [[AttributeEntry]] from the corresponding\nevent handler implemented as a Ceylon function type.\n\n#### How to use it\n\nIt is used when creating the `ceylon.html` tree that will be rendered\nby a [[Template]]. Event Handlers can thus be added in the\n[[Node.attributes]] parameter of the Html Node.\n\n#### Example\n\n```\n Pre {\n     Code { clazz = \"ceylon\";\n         attributes = [\n             lifecycle.create((vnode) {\n                 dynamic {\n                     hljs.highlightBlock(vnode.dom);\n                 }\n             })\n         ];\n         sourceCode\n     }\n }\n```\n\nIn this example, the [highlight.js](https:\/\/highlightjs.org\/) highlighting\nis applied to the content of the [[Code]] Html node, each time the\ncorresponding Dom node is created.\n"]}],nm:"lifecycle"},router:{$t:{pk:".",nm:"Router"},pa:1,mt:"a",$at:{lastRoutingPath:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"g",nm:"lastRoutingPath"},parameters:{$t:{pk:"herd.thrillon.jsutils",nm:"JS"},pa:3,mt:"g",nm:"parameters"}},$m:{redirect:{$t:{md:"$",pk:"$",nm:"Anything"},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"url"},{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{md:"$",pk:"$",ta:{"Entry.Item":{md:"$",pk:"$",nm:"String"},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Iterable"},mt:"prm",nm:"routeParameters"},{$t:{md:"$",pk:"$",nm:"Boolean"},def:1,mt:"prm",nm:"replace"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:"herd.thrillon.jsutils",nm:"JS"}]},def:1,mt:"prm",nm:"state"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},def:1,mt:"prm",nm:"title"}]],$ff:1,mt:"m",nm:"redirect"},init:{$t:{md:"$",pk:"$",nm:"Anything"},pa:3,ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Element"},mt:"prm",nm:"root"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"defaultRoute"},{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{pk:"$",nm:"Nothing"},"Iterable.Element":{md:"$",pk:"$",ta:{"Entry.Item":{comp:"u",l:[{pk:".",nm:"Component"},{pk:".",nm:"RouteResolver"}]},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Iterable"},mt:"prm",nm:"routes"}]],$ff:1,mt:"m",nm:"init"},prefix:{$t:{md:"$",pk:"$",nm:"Anything"},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"prefix"}]],$ff:1,mt:"m",nm:"prefix"},parameter:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"name"}]],mt:"m",nm:"parameter"},link:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:3,ps:[[{$t:{md:"$",pk:"$",nm:"Boolean"},def:1,mt:"prm",nm:"isStaticLink"}]],mt:"m",nm:"link"}},nm:"router",$c:{anon$0$9v0nos:{super:{md:"$",pk:"$",nm:"Basic"},sts:[{pk:".",nm:"Router"}],mt:"c",$anon:1,nm:"anon$0$9v0nos"}}},InputTextValue:{super:{pk:".",ta:{"InputBoundValue.T":{md:"$",pk:"$",nm:"String"},"InputBoundValue.Exists":{nm:"Exists"}},nm:"InputBoundValue"},pa:1,sts:[{pk:".",ta:{"BoundValue.Exists":{nm:"Exists"},"BoundValue.T":{md:"$",pk:"$",nm:"String"}},nm:"BoundValue"}],ps:[{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"}},nm:"Attribute"},{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"$",pk:"$",nm:"String"}},nm:"Attribute"}]},mt:"prm",an:[{doc:["The type of the Html [[Input]] this bound value will be bound to"]}],nm:"type"},{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{md:"$",pk:"$",nm:"String"}},nm:"WatchedValue"},pa:3,mt:"prm",an:[{doc:["The watched value this bound value is based on"]}],nm:"watchedValue"}],mt:"c",$at:{type$uyj9el:{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"}},nm:"Attribute"},{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"$",pk:"$",nm:"String"}},nm:"Attribute"}]},mt:"a",an:[{doc:["The type of the Html [[Input]] this bound value will be bound to"]}],nm:"type"},watchedValue:{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{md:"$",pk:"$",nm:"String"}},nm:"WatchedValue"},pa:3,mt:"a",an:[{doc:["The watched value this bound value is based on"]}],nm:"watchedValue"},binder:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:3,mt:"g",nm:"binder"}},tp:[{sts:[{md:"$",pk:"$",nm:"Null"}],nm:"Exists"}],an:[{doc:["\nA [[BoundValue]] that can be used with a [[Input]] Html node and bound to its\n`value` text attribute.\n\n### Example\n\n```\n   object satisfies Template {\n     value name = InputTextValue(InputType.text, WatchedValue<String>(null));\n\n     build(JS attrs) =>\n       Main {\n         Div {\n           Input { type = name.type; attributes = [ name.binder ]; }\n           Button {\n             attributes = [\n                 event.click((evt) {\n                     \/\/ Displays the content of the input text\n                     window.alert(\"Name = ``name.val else \"<null>\"``\");\n                 })\n             ];\n             \"Display\"\n           }\n         }\n       }\n   }\n   ```\n"]}],nm:"InputTextValue"},VNode:{pa:1,mt:"i",$at:{dom:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"dom"},domSize:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"domSize"},instance:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"instance"},children:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"children"},_state:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"_state"},skip:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"skip"},tag:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"String"},{pk:".",nm:"Component"}]},pa:5,mt:"a",dyn:1,nm:"tag"},text:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"text"},state:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"state"},key:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"key"},events:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"events"},attrs:{$t:{nm:"$U"},pa:5,mt:"a",dyn:1,nm:"attrs"}},dyn:1,an:[{doc:["Ceylon binding for a Mithril [VNode](https:\/\/mithril.js.org\/vnodes.html)"]}],nm:"VNode"},event:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,mt:"o",$m:{cancel:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"cancel"},play:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"play"},select:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"select"},mouseover:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mouseover"},mousemove:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mousemove"},mousewheel:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mousewheel"},focus:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"focus"},keypress:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"keypress"},volumechange:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"volumechange"},dblclick:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"dblclick"},mouseup:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mouseup"},suspend:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"suspend"},scroll:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"scroll"},keyup:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"keyup"},canplaythrough:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"canplaythrough"},emptied:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"emptied"},click:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"click"},pause:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"pause"},cuechange:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"cuechange"},mouseenter:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mouseenter"},input:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"input"},abort:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"abort"},invalid:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"invalid"},reset:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"reset"},playing:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"playing"},mousedown:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mousedown"},durationchange:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"durationchange"},submit:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"submit"},waiting:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"waiting"},ratechange:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"ratechange"},show:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"show"},blur:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"blur"},error:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"error"},loadstart:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"loadstart"},load:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"load"},canplay:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"canplay"},mouseout:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mouseout"},stalled:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"stalled"},timeupdate:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"timeupdate"},loadedmetadata:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"loadedmetadata"},loadeddata:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"loadeddata"},custom:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"name"},{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"custom"},change:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"change"},toggle:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"toggle"},seeked:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"seeked"},keydown:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"keydown"},seeking:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"seeking"},mouseleave:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"mouseleave"},ended:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"ended"},progress:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"progress"},resize:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Event"},mt:"prm",nm:"evt"}]],mt:"prm",$pt:"f",nm:"code"}]],mt:"m",nm:"resize"}},an:[{doc:["This top-level object provides wrapper methods\nfor each type of HTML DOM event.\n\nThis allows producing an [[AttributeEntry]] from the corresponding\nevent handler implemented as a Ceylon function type.\n\n#### How to use it\n\nIt is used when creating the `ceylon.html` tree that will be rendered\nby a [[Template]]. Event Handlers can thus be added in the\n[[Node.attributes]] parameter of the Html Node.\n\n```\nfunction buttonWitOnClickHandler() => Button {\n     attributes = [\n     \tevent.click((evt) {\n     \t    doAnActionOnEvent(evt)\n     \t});\n     ];\n     \"Standard Button\"\n}\n\nfunction buttonWitCustomEventHandler() => Button {\n     attributes = [\n     \tevent.custom(\"ontouchmove\", (evt) {\n     \t    doAnActionOnEvent(evt)\n     \t});\n     ];\n     \"Touchable Button\"\n}\n\n```\n"]}],nm:"event"},Component:{pa:1,mt:"i",dyn:1,$m:{view:{$t:{pk:".",nm:"VNode"},pa:5,ps:[[{$t:{pk:".",nm:"VNode"},mt:"prm",nm:"vnode"}]],mt:"m",dyn:1,nm:"view"}},an:[{doc:["Ceylon binding for a Mithril [Component](https:\/\/mithril.js.org\/components.html)"]}],nm:"Component"},key:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,mt:"o",$at:{attributeName:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"attributeName"}},$m:{set:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"keyValue"}]],mt:"m",nm:"set"},build:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",$pt:"f",nm:"builder"}]],mt:"m",nm:"build"}},an:[{doc:["\nHelper object to provide the Mithril [key](https:\/\/mithril.js.org\/keys.html)\nfeature.\n\n#### Key provided from an already-known value\n\n```\n List<String> list;\n ...\n Table {\n     TBody {\n         for (i->item in list.indexed)\n         Tr {\n             attributes = [ key.set(i.string) ];\n             item\n         }\n     }\n };\n```\n\n#### Key provided as a function\n\n```\n class Person(shared String firstName, shared String lastName) {\n     shared String key() => \"``firstName`` $$ ``lastName``\";\n }\n Set<Person> persons = nothing;\n\n Table {\n     TBody {\n         for (person in persons)\n         Tr {\n             attributes = [ key.build(person.key) ];\n         }\n     }\n };\n```\n"]}],nm:"key"},InputBoundValue:{super:{md:"$",pk:"$",nm:"Basic"},pa:257,sts:[{pk:".",ta:{"BoundValue.Exists":{nm:"Exists"},"BoundValue.T":{nm:"T"}},nm:"BoundValue"}],ps:[{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"}},nm:"Attribute"},{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"$",pk:"$",nm:"String"}},nm:"Attribute"}]},pa:1,mt:"prm",nm:"type"}],mt:"c",$at:{type:{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"}},nm:"Attribute"},{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"$",pk:"$",nm:"String"}},nm:"Attribute"}]},pa:1,mt:"a",nm:"type"}},$m:{extractInputType:{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"},{md:"$",pk:"$",nm:"String"},{md:"$",pk:"$",nm:"Null"}]},pa:1,ps:[[{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"}},nm:"Attribute"},{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"$",pk:"$",nm:"String"}},nm:"Attribute"}]},mt:"prm",nm:"attribute"}]],mt:"m",an:[{restricted:[]}],nm:"extractInputType"}},tp:[{sts:[{md:"$",pk:"$",nm:"Object"}],nm:"T"},{sts:[{md:"$",pk:"$",nm:"Null"}],nm:"Exists"}],nm:"InputBoundValue"},WatchedValue:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,ps:[{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},mt:"prm",nm:"initialValue"},{$t:{md:"$",pk:"$",nm:"Anything"},def:1,mt:"prm",$pt:"f",nm:"onChange"}],mt:"c",$at:{val:{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},pa:1025,mt:"g",$set:{mt:"s"},nm:"val"},string:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"g",nm:"string"},v$7asjow:{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},pa:1024,mt:"a",nm:"v"},initialValue$wd9n01:{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},mt:"a",nm:"initialValue"}},$m:{onChange$puh68x:{$t:{md:"$",pk:"$",nm:"Anything"},$ff:1,mt:"m",nm:"onChange"},setQuietly:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,ps:[[{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},mt:"prm",nm:"val"}]],$ff:1,mt:"m",nm:"setQuietly"},set:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,ps:[[{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},mt:"prm",nm:"val"}]],$ff:1,mt:"m",nm:"set"},change:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},mt:"prm",nm:"val"}]],mt:"prm",$pt:"f",nm:"action"}]],$ff:1,mt:"m",$m:{action$rebrp:{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},mt:"prm",nm:"val"}]],mt:"m",nm:"action"}},nm:"change"},get:{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},pa:1,mt:"m",nm:"get"}},tp:[{sts:[{md:"$",pk:"$",nm:"Object"}],nm:"T"},{sts:[{md:"$",pk:"$",nm:"Null"}],def:{md:"$",pk:"$",nm:"Null"},nm:"Exists"}],an:[{doc:["\nA [[WatchedValue]] allows defining values that will trigger a\nMithril *redraw* event (and finally a DOM update) whenever\nit is changed.\n\n### How it works\n\nIf you have such a watched value:\n\n```\nWatchedValue<Time> theTime = WatchedValue<Time>(null) ;\n```\n\nAnd this code inside a [[Template]]:\n\n```\n   Label {\n     \"Time is : ``theTime.val else \"\"``\"\n   }\n```\n\nThen, in any place in your Ceylon code, if you set the time value with\nthe following code:\n\n```\n   theTime.val = now().time();\n```\n\nThis will update the content of the HTML label defined above.\n\n### More details\n\n- There is a variant named [[ExistingWatchedValue]] that can be used\nwhen the value is known from the begining, and cannot be [[null]].\n\n- If the watched value is a list for example, you may want to\ncall an operation on this list to change it. For this you can use the \n[[change|WatchedValue.change]] method like this:\n\n```\nvalue watchedList = ExistingWatchedValue<List<String>(ArrayList<String>());\n...\nwatchedList.change((l) => l.add(\"aString\");\n```\n\n- You can use the optional [[onChange|WatchedValue.onChange]] parameter to\nadd some other action to be done *after* the value is changed,\nand *before* DOM redraw operation is triggered.\n\n- If you need to set the value *without* triggering a DOM redraw (inside\nan event handler for example), just use the [[setQuietly|WatchedValue.setQuietly]] method.\n\n"]}],nm:"WatchedValue"},Args:{pa:1,sts:[{pk:"herd.thrillon.jsutils",nm:"JS"}],mt:"i",dyn:1,an:[{doc:["\nWrapper on a [[JS]] object to be used inside the [[Template.build]] function\n"]}],nm:"Args"},"$pkg-pa":1,Router:{pa:1,mt:"i",$at:{lastRoutingPath:{$t:{md:"$",pk:"$",nm:"String"},pa:5,mt:"a",an:[{doc:["Wrapper around the Mithril [`m.route.get`](https:\/\/mithril.js.org\/route.html#mrouteget) method"]}],nm:"lastRoutingPath"},parameters:{$t:{pk:"herd.thrillon.jsutils",nm:"JS"},pa:5,mt:"a",an:[{doc:["Wrapper around the Mithril [`m.route.param`](https:\/\/mithril.js.org\/route.html#mrouteparam) method\nwithout any parameters"]}],nm:"parameters"}},$m:{redirect:{$t:{md:"$",pk:"$",nm:"Anything"},pa:5,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"url"},{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{md:"$",pk:"$",nm:"Null"},"Iterable.Element":{md:"$",pk:"$",ta:{"Entry.Item":{md:"$",pk:"$",nm:"String"},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Iterable"},mt:"prm",nm:"routeParameters"},{$t:{md:"$",pk:"$",nm:"Boolean"},def:1,mt:"prm",nm:"replace"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:"herd.thrillon.jsutils",nm:"JS"}]},def:1,mt:"prm",nm:"state"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},def:1,mt:"prm",nm:"title"}]],$ff:1,mt:"m",an:[{doc:["Wrapper around the Mithril [`m.route.set`](https:\/\/mithril.js.org\/route.html#mrouteset) method"]}],nm:"redirect"},init:{$t:{md:"$",pk:"$",nm:"Anything"},pa:5,ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Element"},mt:"prm",nm:"root"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"defaultRoute"},{$t:{md:"$",pk:"$",ta:{"Iterable.Absent":{pk:"$",nm:"Nothing"},"Iterable.Element":{md:"$",pk:"$",ta:{"Entry.Item":{comp:"u",l:[{pk:".",nm:"Component"},{pk:".",nm:"RouteResolver"}]},"Entry.Key":{md:"$",pk:"$",nm:"String"}},nm:"Entry"}},nm:"Iterable"},mt:"prm",nm:"routes"}]],$ff:1,mt:"m",an:[{doc:["Wrapper around the Mithril [`m.route`](https:\/\/mithril.js.org\/route.html#description) method"]}],nm:"init"},prefix:{$t:{md:"$",pk:"$",nm:"Anything"},pa:5,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"prefix"}]],$ff:1,mt:"m",an:[{doc:["Wrapper around the Mithril [`m.route.prefix`](https:\/\/mithril.js.org\/route.html#mrouteprefix) method"]}],nm:"prefix"},parameter:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:5,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"name"}]],mt:"m",an:[{doc:["Wrapper around the Mithril [`m.route.param`](https:\/\/mithril.js.org\/route.html#mrouteparam) method\nwith a parameter"]}],nm:"parameter"},link:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:5,ps:[[{$t:{md:"$",pk:"$",nm:"Boolean"},def:1,mt:"prm",nm:"isStaticLink"}]],mt:"m",an:[{doc:["Wrapper around the Mithril [`m.route.link`](https:\/\/mithril.js.org\/route.html#mroutelink) method.\nThis returns an [[AttributeEntry]] that should be added to the [[attributes|Node.attributes]] of the\nHtml [[Anchor|A]] node"]}],nm:"link"}},an:[{doc:["\nWrapper around the Mithril [`m.route`](https:\/\/mithril.js.org\/route.html) methods\n"]}],nm:"Router"},TextAreaValue:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,sts:[{pk:".",ta:{"BoundValue.Exists":{nm:"Exists"},"BoundValue.T":{md:"$",pk:"$",nm:"String"}},nm:"BoundValue"}],ps:[{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{md:"$",pk:"$",nm:"String"}},nm:"WatchedValue"},pa:3,mt:"prm",an:[{doc:["The watched value this bound value is based on"]}],nm:"watchedValue"}],mt:"c",$at:{watchedValue:{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{md:"$",pk:"$",nm:"String"}},nm:"WatchedValue"},pa:3,mt:"a",an:[{doc:["The watched value this bound value is based on"]}],nm:"watchedValue"},binder:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:3,mt:"g",nm:"binder"}},tp:[{sts:[{md:"$",pk:"$",nm:"Null"}],nm:"Exists"}],an:[{doc:["\nA [[BoundValue]] that can be used with a [[TextArea]] Html node.\nIts usage is shown as an example in the main documentation of [[BoundValue]]\n"]},{see:["BoundValue"]}],nm:"TextAreaValue"},mount:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,ps:[[{$t:{md:"ceylon.interop.browser",pk:"ceylon.interop.browser.dom",nm:"Element"},mt:"prm",nm:"parent"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"Component"}]},mt:"prm",nm:"component"}]],$ff:1,mt:"m",an:[{doc:["Activates a component, enabling it to autoredraw on user events.\n\nThis a wrapper on the corresponding Mithril API:\n[m.mount()](https:\/\/mithril.js.org\/mount.html)"]}],nm:"mount"},ExistingWatchedValue:{super:{pk:".",ta:{"WatchedValue.Exists":{pk:"$",nm:"Nothing"},"WatchedValue.T":{nm:"T"}},nm:"WatchedValue"},pa:1,ps:[{$t:{nm:"T"},mt:"prm",nm:"initialValue"},{$t:{md:"$",pk:"$",nm:"Anything"},def:1,mt:"prm",$pt:"f",nm:"onChange"}],mt:"c",$at:{initialValue$vlffu6:{$t:{nm:"T"},mt:"a",nm:"initialValue"}},$m:{onChange$qmbdes:{$t:{md:"$",pk:"$",nm:"Anything"},$ff:1,mt:"m",nm:"onChange"}},tp:[{sts:[{md:"$",pk:"$",nm:"Object"}],nm:"T"}],nm:"ExistingWatchedValue"},BoundValue:{pa:1,mt:"i",$at:{val:{$t:{comp:"u",l:[{nm:"T"},{nm:"Exists"}]},pa:1025,mt:"g",$set:{mt:"s"},an:[{doc:["Proxy property to the content of the associated watched value"]}],nm:"val"},watchedValue:{$t:{pk:".",ta:{"WatchedValue.Exists":{nm:"Exists"},"WatchedValue.T":{nm:"T"}},nm:"WatchedValue"},pa:5,mt:"a",an:[{doc:["The watched value this bound value is based on"]}],nm:"watchedValue"},string:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"g",nm:"string"},binder:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:5,mt:"a",an:[{doc:["Custom attribute that should be added to [[attributes|Node.attributes]]\nof Html nodes.\nIt is used by the framework to setup the 2-way binding to the Dom\nnode value"]}],nm:"binder"}},tp:[{sts:[{md:"$",pk:"$",nm:"Object"}],nm:"T"},{sts:[{md:"$",pk:"$",nm:"Null"}],nm:"Exists"}],an:[{doc:["\nA [[BoundValue]] provides a way to associate a value\nwith an Html node, and bidirectionally bind it to a propety\nof the html node.\n\nThe [[BoundValue]] interface :\n- is based on a [[WatchedValue]]\n- defines a [[binder|BoundValue.binder]] that is an [[AttributeEntry]] and that should be passed to the\nattributes of the Html node it is bound to.\n\nSeveral implementations are provided for the most common use-cases:\n[[TextAreaValue]], [[InputTextValue]], [[InputCheckedStatus]], [[SelectValue]]\n\n### How it works\n\nConsider the following code :\n\n```\n   object satisfies Template {\n     value textArea = TextAreaValue(ExistingWatchedValue<String>(\"\"));\n\n     build(JS attrs) =>\n       Main {\n         Div {\n           TextArea {\n             rows = 30;\n             cols = 200;\n             attributes = [ textArea.binder ];\n           },\n           Button {\n             attributes = [\n                 event.click((evt) {\n                     \/\/ Displays the content of `TextArea`\n                     window.alert(\"text = ``textArea.val``\");\n\n                     \/\/ Updates the content of `TextArea`\n                     textArea.val += \" - suffix\";\n                 })\n             ];\n             \"Display\"\n           }\n         }\n       }\n   }\n   ```\n\nEach time the text of the [[TextArea]] Html element is changed by the user,\nit is automatically updated in the `textArea.val` value.\n\nSimilarly, each time the `textArea.val` is assigned a new text value,\nit updates the text value of the [[TextArea]] Html element.\n\n"]}],nm:"BoundValue"},InputCheckedStatus:{super:{pk:".",ta:{"InputBoundValue.T":{md:"$",pk:"$",nm:"Boolean"},"InputBoundValue.Exists":{pk:"$",nm:"Nothing"}},nm:"InputBoundValue"},pa:1,sts:[{pk:".",ta:{"BoundValue.Exists":{pk:"$",nm:"Nothing"},"BoundValue.T":{md:"$",pk:"$",nm:"Boolean"}},nm:"BoundValue"}],ps:[{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"}},nm:"Attribute"},{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"$",pk:"$",nm:"String"}},nm:"Attribute"}]},mt:"prm",nm:"type"},{$t:{pk:".",ta:{"ExistingWatchedValue.T":{md:"$",pk:"$",nm:"Boolean"}},nm:"ExistingWatchedValue"},pa:3,mt:"prm",nm:"watchedValue"}],mt:"c",$at:{watchedValue:{$t:{pk:".",ta:{"ExistingWatchedValue.T":{md:"$",pk:"$",nm:"Boolean"}},nm:"ExistingWatchedValue"},pa:3,mt:"a",nm:"watchedValue"},type$8qbubk:{$t:{comp:"u",l:[{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"ceylon.html",pk:"ceylon.html",nm:"InputType"}},nm:"Attribute"},{md:"ceylon.html",pk:"ceylon.html",ta:{"Attribute.Value":{md:"$",pk:"$",nm:"String"}},nm:"Attribute"}]},mt:"a",nm:"type"},binder:{$t:{md:"ceylon.html",pk:"ceylon.html",nm:"AttributeEntry"},pa:3,mt:"g",nm:"binder"}},an:[{doc:["\nA [[BoundValue]] that can be used with a [[Input]] Html node and bound to its\n`checked` boolean attribute.\n\n### Example\n\n```\n   object satisfies Template {\n     value checked = InputTextValue(InputType.checkbox, ExistingWatchedValue<Boolean>(false));\n\n     build(JS attrs) =>\n       Main {\n         Div {\n           Input { type = checked.type; attributes = [ checked.binder ]; }\n           Button {\n             attributes = [\n                 event.click((evt) {\n                     \/\/ Use the input checked status to display a message\n                     window.alert(if (checked.val) then \"It is checked\" else \"is it not checked\");\n                 })\n             ];\n             \"Display\"\n           }\n         }\n       }\n   }\n   ```\n"]}],nm:"InputCheckedStatus"}},"$mod-name":"herd.thrillon"};
});
}(typeof define==='function' && define.amd ? define : function (factory) {
if (typeof exports!=='undefined') { factory(require, exports, module);
} else { throw 'no module loader'; }
}));
